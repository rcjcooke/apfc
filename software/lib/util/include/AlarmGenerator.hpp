#ifndef __ALARMGENERATOR_H_INCLUDED__
#define __ALARMGENERATOR_H_INCLUDED__

class AlarmGenerator {
  
public:
  /*******************************
   * Constructors
   *******************************/
  // Constructor requires the number of unique alarm codes that could be generated
  AlarmGenerator(char uniqueAlarmGeneratorCode, int numAlarmCodes);

  /*******************************
   * Getters / Setters
   *******************************/
  // Get the total number of possible alarm codes generated by this instance
  int getNumAlarmCodes() const;
  // Get the array of alarm states
  bool* getAlarmStates() const;
  // Get the unique character representing this alarm generator instance
  char getUniqueAlarmGeneratorCode() const;

  /*******************************
   * Event handling
   *******************************/
  // Define alarm event handler function type
  typedef void (*AlarmGeneratorPtrCharIntFuncPtr)(AlarmGenerator*, char, int);
  // Defines a function to call when an alarm occurs
  void onAlarm(volatile AlarmGeneratorPtrCharIntFuncPtr onAlarmFunction);
  // Defines a function to call when an alarm clears
  void onClear(volatile AlarmGeneratorPtrCharIntFuncPtr onClearFunction);

protected:
  // Called when triggering an alarm
  void triggerAlarm(int alarmCode);
  // Called when clearing an alarm
  void clearAlarm(int alarmCode);

  /*******************************
   * Member variables
   *******************************/
  // A unique character representing this alarm generator instance
  char mUniqueAlarmGeneratorCode;
  // Total number of possible alarm codes generated by this instance
  int mNumAlarmCodes;
  // The array of alarm states
  bool* mAlarmStates;

  // The function to call if an alarm occurs
  volatile AlarmGeneratorPtrCharIntFuncPtr mOnAlarmFunction = nullptr;
  // The function to call if an alarm clears
  volatile AlarmGeneratorPtrCharIntFuncPtr mOnClearFunction = nullptr;

};

#endif // __ALARMGENERATOR_H_INCLUDED__
